# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

#trigger only on master or PR to master
trigger:
- master
pr:
  - master

resources:
  containers:
  - container: postgres
    image: postgres:14-alpine
    env:
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432

services:
  postgres: postgres

steps:
- script: |
    sudo apt-get update &&  sudo apt-get install postgresql-client -y

    java -version
  displayName: install java
- script: |
    psql -h localhost -p 5432 -U postgres < .docker/initdb.sql
    sudo update-alternatives --display java java - auto mode 
    sudo update-alternatives --install /usr/bin/java /usr/lib/jvm/temurin-17-jdk-amd64/bin/java 1
  displayName: initialize database and set jdk 17 to default
  env:
    PGPASSWORD: postgres\
- script: |
    java --version
    ./gradlew test
  displayName: run test
   
  env:
    MOLGENIS_POSTGRES_USER: molgenis
    MOLGENIS_POSTGRES_PASS: molgenis
    MOLGENIS_POSTGRES_URI: jdbc:postgresql://localhost/molgenis
    JVM_OPTS: -Xmx3200m
    GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"