plugins {
    id "jacoco"
    id "java"
    id "com.diffplug.spotless" version "5.13.0" apply false
}

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: "com.diffplug.spotless"

    repositories {
        mavenLocal()
        maven {
            url = 'https://repo.maven.apache.org/maven2'
        }
    }

    spotless {
        java {
            googleJavaFormat()
        }
    }
    compileJava.dependsOn 'spotlessApply'

    /* default dependencies for all projects*/
    dependencies {
        implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.14.1'
        implementation 'org.apache.logging.log4j:log4j-core:2.14.1'
        implementation 'org.jooq:jooq:3.14.11'
        implementation 'com.zaxxer:HikariCP:4.0.3'
        implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.3'
        implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.12.3'
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
        implementation 'com.fasterxml.jackson.core:jackson-core:2.12.3'
        implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.3'
        implementation 'com.graphql-java:graphql-java:16.2'
        implementation 'com.sparkjava:spark-core:2.9.3'
        implementation 'org.javers:javers-core:6.1.1'

        //also used outside test
        implementation 'junit:junit:4.13.2'
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }

    targetCompatibility = '11'
    sourceCompatibility = '11'

    jar {
        reproducibleFileOrder = true
        manifest {
            attributes(
                    'Specification-Version': project.version.toString(),
                    'Implementation-Version': getGitHash(),
                    'Created-By': "Gradle ${gradle.gradleVersion}",
                    'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                    'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
            )
        }
    }


    test {
        failFast true
        testLogging {
            events "passed", "skipped", "failed" //, "standardOut", "standardError"

            showExceptions true
            exceptionFormat "full"
            showCauses true
            showStackTraces true

            showStandardStreams = false
        }
    }
}

/* generate java test coverage report*/
task jacocoMergedReport(type: JacocoReport) {
    dependsOn = subprojects.test
    additionalSourceDirs.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories.setFrom files(subprojects.sourceSets.main.output)
    executionData.setFrom project.fileTree(dir: '.', include: '**/build/jacoco/test.exec')
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled false
    }
}
