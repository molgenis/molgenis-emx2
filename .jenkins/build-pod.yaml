apiVersion: v1
kind: Pod
metadata:
  name: jenkins-agent
spec:
  containers:
    - name: java
      image: gradle:jdk17
      imagePullPolicy: IfNotPresent
      command:
      - cat
      tty: true
      resources:
        requests:
          cpu: 2
          memory: 1Gi
        limits:
          cpu: 2
          memory: 4Gi
      volumeMounts:
        - name: docker-socket
          mountPath: /var/run
    - name: postgres
      image: postgres:14-alpine
      imagePullPolicy: IfNotPresent
      args: ["-c", "shared_buffers=256MB", "-c", "max_locks_per_transaction=1024"]
      tty: true
      resources:
        requests:
          cpu: 1
          memory: 1Gi
        limits:
          cpu: 1
          memory: 1Gi
      env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_DB
          value: postgres
    - name: helm
      image: alpine/k8s:1.25.7
      imagePullPolicy: IfNotPresent
      tty: true
      resources:
        requests:
          cpu: 1
          memory: 1Gi
        limits:
          cpu: 1
          memory: 1Gi
      env:
        - name: "KUBECONFIG"
          value: "/home/jenkins/agent/.kube/config"
    - name: docker-daemon
      image: docker:23.0.3-dind
      #docker in docker so we can access it via docker socket
      #https://github.com/jenkinsci/kubernetes-plugin/blob/master/examples/dind.groovy
      securityContext:
        privileged: true
      volumeMounts:
        - name: docker-socket
          mountPath: /var/run
  volumes:
    - name: postgres-initdb
      emptyDir: {}
    - name: docker-socket
      emptyDir: {}
  restartPolicy: Never
