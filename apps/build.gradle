/* will produce a fat jar containing all html/js dist in public_html/apps*/

plugins {
    id "java"
    id "com.github.node-gradle.node" version "3.6.0"
}

def nodeSpec = {
    version = '19.9.0'
    yarnVersion = '1.22.19'
    npmVersion = "9.5.1"
    download = true
}

node {
    with nodeSpec
}

task cleanJavascript(type: YarnTask, dependsOn: yarn_install) {
    outputs.upToDateWhen { false }
    args = ['run', 'nx', 'reset']
}
clean.dependsOn cleanJavascript

task format(type: YarnTask, dependsOn: yarn_install) {
    outputs.upToDateWhen { false }
    args = ['run', 'nx', 'format:write']
}

task checkFormat(type: YarnTask, dependsOn: yarn_install) {
    outputs.upToDateWhen { false }
    args = ['run', 'nx', 'format:check']
}

task buildJavascript(type: YarnTask, dependsOn: yarn_install) {
    environment = ["NODE_OPTIONS":"--max-old-space-size=4096"]
    args = ['run', 'nx', 'run-many', '--target=format:write,build,build-showcase',"--parallel=${Math.ceil(Runtime.runtime.availableProcessors() / 2)}",'--verbose']
    doLast {
        file("${project.projectDir}").eachDir { dir ->
            if (dir.name == 'molgenis-components' || dir.name == 'molgenis-viz') {
                copy {
                    from dir.path + "/showCase"
                    into "${buildDir}/generated/main/resources/public_html/apps/" + dir.name
                }
            } else if(dir.name != ".gradle" && dir.name != 'build' && dir.name != 'node_modules') {
                println dir.path + "/dist"
                copy {
                    from dir.name + "/dist"
                    into "${buildDir}/generated/main/resources/public_html/apps/" + dir.name
                }
            }
        }
    }
    outputs.upToDateWhen { false }
}

compileJava.dependsOn buildJavascript

sourceSets {
    main {
        resources {
            srcDir "${buildDir}/generated/main/resources"
        }
    }
}
